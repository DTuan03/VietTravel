// Generated by view binder compiler. Do not edit!
package com.httt1.vietnamtravel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.httt1.vietnamtravel.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityReplacePassBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button activityReplaceBtnUpdate;

  @NonNull
  public final EditText activityReplaceEtPassCf;

  @NonNull
  public final EditText activityReplaceEtPassNew;

  @NonNull
  public final EditText activityReplaceEtPassPresent;

  @NonNull
  public final ImageView activityReplaceImgBack;

  @NonNull
  public final ImageView activityReplaceImgEyeHideNew;

  @NonNull
  public final ImageView activityReplaceImgEyeHidenCf;

  @NonNull
  public final ImageView activityReplaceImgEyeHidenPresent;

  @NonNull
  public final TextView activityReplaceTvNotifi;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout constraintLayout2;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView textView28;

  @NonNull
  public final TextView textView29;

  @NonNull
  public final TextView textView30;

  @NonNull
  public final TextView textView31;

  private ActivityReplacePassBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button activityReplaceBtnUpdate, @NonNull EditText activityReplaceEtPassCf,
      @NonNull EditText activityReplaceEtPassNew, @NonNull EditText activityReplaceEtPassPresent,
      @NonNull ImageView activityReplaceImgBack, @NonNull ImageView activityReplaceImgEyeHideNew,
      @NonNull ImageView activityReplaceImgEyeHidenCf,
      @NonNull ImageView activityReplaceImgEyeHidenPresent,
      @NonNull TextView activityReplaceTvNotifi, @NonNull ConstraintLayout constraintLayout,
      @NonNull ConstraintLayout constraintLayout2, @NonNull ConstraintLayout main,
      @NonNull TextView textView28, @NonNull TextView textView29, @NonNull TextView textView30,
      @NonNull TextView textView31) {
    this.rootView = rootView;
    this.activityReplaceBtnUpdate = activityReplaceBtnUpdate;
    this.activityReplaceEtPassCf = activityReplaceEtPassCf;
    this.activityReplaceEtPassNew = activityReplaceEtPassNew;
    this.activityReplaceEtPassPresent = activityReplaceEtPassPresent;
    this.activityReplaceImgBack = activityReplaceImgBack;
    this.activityReplaceImgEyeHideNew = activityReplaceImgEyeHideNew;
    this.activityReplaceImgEyeHidenCf = activityReplaceImgEyeHidenCf;
    this.activityReplaceImgEyeHidenPresent = activityReplaceImgEyeHidenPresent;
    this.activityReplaceTvNotifi = activityReplaceTvNotifi;
    this.constraintLayout = constraintLayout;
    this.constraintLayout2 = constraintLayout2;
    this.main = main;
    this.textView28 = textView28;
    this.textView29 = textView29;
    this.textView30 = textView30;
    this.textView31 = textView31;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityReplacePassBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityReplacePassBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_replace_pass, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityReplacePassBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_replace_btn_update;
      Button activityReplaceBtnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (activityReplaceBtnUpdate == null) {
        break missingId;
      }

      id = R.id.activity_replace_et_pass_cf;
      EditText activityReplaceEtPassCf = ViewBindings.findChildViewById(rootView, id);
      if (activityReplaceEtPassCf == null) {
        break missingId;
      }

      id = R.id.activity_replace_et_pass_new;
      EditText activityReplaceEtPassNew = ViewBindings.findChildViewById(rootView, id);
      if (activityReplaceEtPassNew == null) {
        break missingId;
      }

      id = R.id.activity_replace_et_pass_present;
      EditText activityReplaceEtPassPresent = ViewBindings.findChildViewById(rootView, id);
      if (activityReplaceEtPassPresent == null) {
        break missingId;
      }

      id = R.id.activity_replace_img_back;
      ImageView activityReplaceImgBack = ViewBindings.findChildViewById(rootView, id);
      if (activityReplaceImgBack == null) {
        break missingId;
      }

      id = R.id.activity_replace_img_eye_hide_new;
      ImageView activityReplaceImgEyeHideNew = ViewBindings.findChildViewById(rootView, id);
      if (activityReplaceImgEyeHideNew == null) {
        break missingId;
      }

      id = R.id.activity_replace_img_eye_hiden_cf;
      ImageView activityReplaceImgEyeHidenCf = ViewBindings.findChildViewById(rootView, id);
      if (activityReplaceImgEyeHidenCf == null) {
        break missingId;
      }

      id = R.id.activity_replace_img_eye_hiden_present;
      ImageView activityReplaceImgEyeHidenPresent = ViewBindings.findChildViewById(rootView, id);
      if (activityReplaceImgEyeHidenPresent == null) {
        break missingId;
      }

      id = R.id.activity_replace_tv_notifi;
      TextView activityReplaceTvNotifi = ViewBindings.findChildViewById(rootView, id);
      if (activityReplaceTvNotifi == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.constraintLayout2;
      ConstraintLayout constraintLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout2 == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.textView28;
      TextView textView28 = ViewBindings.findChildViewById(rootView, id);
      if (textView28 == null) {
        break missingId;
      }

      id = R.id.textView29;
      TextView textView29 = ViewBindings.findChildViewById(rootView, id);
      if (textView29 == null) {
        break missingId;
      }

      id = R.id.textView30;
      TextView textView30 = ViewBindings.findChildViewById(rootView, id);
      if (textView30 == null) {
        break missingId;
      }

      id = R.id.textView31;
      TextView textView31 = ViewBindings.findChildViewById(rootView, id);
      if (textView31 == null) {
        break missingId;
      }

      return new ActivityReplacePassBinding((ConstraintLayout) rootView, activityReplaceBtnUpdate,
          activityReplaceEtPassCf, activityReplaceEtPassNew, activityReplaceEtPassPresent,
          activityReplaceImgBack, activityReplaceImgEyeHideNew, activityReplaceImgEyeHidenCf,
          activityReplaceImgEyeHidenPresent, activityReplaceTvNotifi, constraintLayout,
          constraintLayout2, main, textView28, textView29, textView30, textView31);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
