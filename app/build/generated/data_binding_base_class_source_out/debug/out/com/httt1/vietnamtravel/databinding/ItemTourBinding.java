// Generated by view binder compiler. Do not edit!
package com.httt1.vietnamtravel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.httt1.vietnamtravel.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTourBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView itemImgFavorite;

  @NonNull
  public final ImageView itemImgTour;

  @NonNull
  public final TextView itemPriceTour;

  @NonNull
  public final CardView itemTour;

  @NonNull
  public final TextView itemTvNameTour;

  @NonNull
  public final TextView textView26;

  private ItemTourBinding(@NonNull CardView rootView, @NonNull ImageView itemImgFavorite,
      @NonNull ImageView itemImgTour, @NonNull TextView itemPriceTour, @NonNull CardView itemTour,
      @NonNull TextView itemTvNameTour, @NonNull TextView textView26) {
    this.rootView = rootView;
    this.itemImgFavorite = itemImgFavorite;
    this.itemImgTour = itemImgTour;
    this.itemPriceTour = itemPriceTour;
    this.itemTour = itemTour;
    this.itemTvNameTour = itemTvNameTour;
    this.textView26 = textView26;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTourBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTourBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_tour, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTourBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_img_favorite;
      ImageView itemImgFavorite = ViewBindings.findChildViewById(rootView, id);
      if (itemImgFavorite == null) {
        break missingId;
      }

      id = R.id.item_img_tour;
      ImageView itemImgTour = ViewBindings.findChildViewById(rootView, id);
      if (itemImgTour == null) {
        break missingId;
      }

      id = R.id.item_price_tour;
      TextView itemPriceTour = ViewBindings.findChildViewById(rootView, id);
      if (itemPriceTour == null) {
        break missingId;
      }

      CardView itemTour = (CardView) rootView;

      id = R.id.item_tv_name_tour;
      TextView itemTvNameTour = ViewBindings.findChildViewById(rootView, id);
      if (itemTvNameTour == null) {
        break missingId;
      }

      id = R.id.textView26;
      TextView textView26 = ViewBindings.findChildViewById(rootView, id);
      if (textView26 == null) {
        break missingId;
      }

      return new ItemTourBinding((CardView) rootView, itemImgFavorite, itemImgTour, itemPriceTour,
          itemTour, itemTvNameTour, textView26);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
